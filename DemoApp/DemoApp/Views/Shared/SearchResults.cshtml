@model Microsoft.Azure.Search.Models.DocumentSearchResponse<DemoApp.Models.ProductInfo>

<div>

    @foreach (var product in Model)
    {
        <div>
            <img class="pull-left img-thumbnail product-thumbnail" src="~/images/@product.Document.ThumbnailPhotoFileName" alt="@product.Document.Name" />
            <div>
                <h4>@Html.ActionLink(product.Document.Name, "Details", "Product", new { id = product.Document.ProductId }, new {})</h4>
                <p>price: @product.Document.ListPrice, color: @product.Document.Color</p>
            </div>
            @Description(product)
        </div>
    }

    @Pager()

</div>


@helper Description(Microsoft.Azure.Search.Models.SearchResult<DemoApp.Models.ProductInfo> product)
{
    var description = product.Document.Description;
    if (product.Highlights != null && product.Highlights.ContainsKey("Description"))
    {
        description = product.Highlights["Description"].First();
    }

    <div class="description">
        <p>@Html.Raw(description)</p>
    </div>
}

@helper Pager()
{
    <nav>
        <ul class="pagination">
            <li class="@PreviousPageClass()"><a href="#" aria-label="Previous" data-page="1"><span aria-hidden="true">&laquo;</span></a></li>
            @for (var i = 1; i <= Math.Ceiling((double)Model.Count / Constants.PageSize); i++)
            {
                <li class="@PageClass(i)"><a href="#" data-page="@i">@i</a></li>
            }
            <li class="@NextPageClass()"><a href="#" aria-label="Next" data-page="@(Math.Ceiling((double)Model.Count / Constants.PageSize))"><span aria-hidden="true">&raquo;</span></a></li>
        </ul>
    </nav>
}

@helper PreviousPageClass()
{
    if (ViewBag.Page == 1)
    {
        @:disabled
    }
}

@helper NextPageClass()
{
    if (ViewBag.Page * Constants.PageSize >= Model.Count)
    {
        @:disabled
    }
}

@helper PageClass(int index)
{
    if (index == ViewBag.Page)
    {
        @:active
    }
}